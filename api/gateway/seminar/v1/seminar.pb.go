// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: gateway/seminar/v1/seminar.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopicMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string      `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Content      string      `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Participants []string    `protobuf:"bytes,3,rep,name=participants,proto3" json:"participants,omitempty"`
	Documents    []*Document `protobuf:"bytes,4,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *TopicMetadata) Reset() {
	*x = TopicMetadata{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicMetadata) ProtoMessage() {}

func (x *TopicMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicMetadata.ProtoReflect.Descriptor instead.
func (*TopicMetadata) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{0}
}

func (x *TopicMetadata) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TopicMetadata) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TopicMetadata) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *TopicMetadata) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type Speech struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RoleUid string `protobuf:"bytes,2,opt,name=role_uid,json=roleUid,proto3" json:"role_uid,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Speech) Reset() {
	*x = Speech{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Speech) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Speech) ProtoMessage() {}

func (x *Speech) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Speech.ProtoReflect.Descriptor instead.
func (*Speech) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{1}
}

func (x *Speech) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Speech) GetRoleUid() string {
	if x != nil {
		return x.RoleUid
	}
	return ""
}

func (x *Speech) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string      `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Participants []string    `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	Speeches     []*Speech   `protobuf:"bytes,3,rep,name=speeches,proto3" json:"speeches,omitempty"`
	Documents    []*Document `protobuf:"bytes,4,rep,name=documents,proto3" json:"documents,omitempty"`
	Title        string      `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	TitleImage   string      `protobuf:"bytes,6,opt,name=title_image,json=titleImage,proto3" json:"title_image,omitempty"`
	Content      string      `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Moderator    string      `protobuf:"bytes,8,opt,name=moderator,proto3" json:"moderator,omitempty"`
}

func (x *Topic) Reset() {
	*x = Topic{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{2}
}

func (x *Topic) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Topic) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Topic) GetSpeeches() []*Speech {
	if x != nil {
		return x.Speeches
	}
	return nil
}

func (x *Topic) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *Topic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Topic) GetTitleImage() string {
	if x != nil {
		return x.TitleImage
	}
	return ""
}

func (x *Topic) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Topic) GetModerator() string {
	if x != nil {
		return x.Moderator
	}
	return ""
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Filename  string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	TotalSize string `protobuf:"bytes,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{3}
}

func (x *Document) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Document) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Document) GetTotalSize() string {
	if x != nil {
		return x.TotalSize
	}
	return ""
}

type CreateTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone        string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Content      string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Moderator    string   `protobuf:"bytes,3,opt,name=moderator,proto3" json:"moderator,omitempty"`
	Participants []string `protobuf:"bytes,4,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *CreateTopicRequest) Reset() {
	*x = CreateTopicRequest{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicRequest) ProtoMessage() {}

func (x *CreateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicRequest.ProtoReflect.Descriptor instead.
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTopicRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateTopicRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateTopicRequest) GetModerator() string {
	if x != nil {
		return x.Moderator
	}
	return ""
}

func (x *CreateTopicRequest) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

type CreateTopicReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *CreateTopicReply) Reset() {
	*x = CreateTopicReply{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicReply) ProtoMessage() {}

func (x *CreateTopicReply) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicReply.ProtoReflect.Descriptor instead.
func (*CreateTopicReply) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTopicReply) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DeleteTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DeleteTopicRequest) Reset() {
	*x = DeleteTopicRequest{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicRequest) ProtoMessage() {}

func (x *DeleteTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicRequest.ProtoReflect.Descriptor instead.
func (*DeleteTopicRequest) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteTopicRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DeleteTopicReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTopicReply) Reset() {
	*x = DeleteTopicReply{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTopicReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicReply) ProtoMessage() {}

func (x *DeleteTopicReply) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicReply.ProtoReflect.Descriptor instead.
func (*DeleteTopicReply) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTopicReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string `protobuf:"bytes,1,opt,name=topicId,proto3" json:"topicId,omitempty"`
}

func (x *StartTopicRequest) Reset() {
	*x = StartTopicRequest{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTopicRequest) ProtoMessage() {}

func (x *StartTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTopicRequest.ProtoReflect.Descriptor instead.
func (*StartTopicRequest) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{8}
}

func (x *StartTopicRequest) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

type StartTopicReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StartTopicReply) Reset() {
	*x = StartTopicReply{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTopicReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTopicReply) ProtoMessage() {}

func (x *StartTopicReply) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTopicReply.ProtoReflect.Descriptor instead.
func (*StartTopicReply) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{9}
}

func (x *StartTopicReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string `protobuf:"bytes,1,opt,name=topicId,proto3" json:"topicId,omitempty"`
}

func (x *StopTopicRequest) Reset() {
	*x = StopTopicRequest{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTopicRequest) ProtoMessage() {}

func (x *StopTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTopicRequest.ProtoReflect.Descriptor instead.
func (*StopTopicRequest) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{10}
}

func (x *StopTopicRequest) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

type StopTopicReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StopTopicReply) Reset() {
	*x = StopTopicReply{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopTopicReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTopicReply) ProtoMessage() {}

func (x *StopTopicReply) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTopicReply.ProtoReflect.Descriptor instead.
func (*StopTopicReply) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{11}
}

func (x *StopTopicReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StreamOutputReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*StreamOutputReply_Reasoning
	//	*StreamOutputReply_Text
	Content isStreamOutputReply_Content `protobuf_oneof:"content"`
	RoleUID string                      `protobuf:"bytes,3,opt,name=roleUID,proto3" json:"roleUID,omitempty"`
}

func (x *StreamOutputReply) Reset() {
	*x = StreamOutputReply{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamOutputReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamOutputReply) ProtoMessage() {}

func (x *StreamOutputReply) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamOutputReply.ProtoReflect.Descriptor instead.
func (*StreamOutputReply) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{12}
}

func (m *StreamOutputReply) GetContent() isStreamOutputReply_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *StreamOutputReply) GetReasoning() string {
	if x, ok := x.GetContent().(*StreamOutputReply_Reasoning); ok {
		return x.Reasoning
	}
	return ""
}

func (x *StreamOutputReply) GetText() string {
	if x, ok := x.GetContent().(*StreamOutputReply_Text); ok {
		return x.Text
	}
	return ""
}

func (x *StreamOutputReply) GetRoleUID() string {
	if x != nil {
		return x.RoleUID
	}
	return ""
}

type isStreamOutputReply_Content interface {
	isStreamOutputReply_Content()
}

type StreamOutputReply_Reasoning struct {
	Reasoning string `protobuf:"bytes,1,opt,name=reasoning,proto3,oneof"`
}

type StreamOutputReply_Text struct {
	Text string `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

func (*StreamOutputReply_Reasoning) isStreamOutputReply_Content() {}

func (*StreamOutputReply_Text) isStreamOutputReply_Content() {}

type GetTopicsMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetTopicsMetadataRequest) Reset() {
	*x = GetTopicsMetadataRequest{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicsMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicsMetadataRequest) ProtoMessage() {}

func (x *GetTopicsMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicsMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetTopicsMetadataRequest) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{13}
}

func (x *GetTopicsMetadataRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetTopicsMetadataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics []*TopicMetadata `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *GetTopicsMetadataReply) Reset() {
	*x = GetTopicsMetadataReply{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicsMetadataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicsMetadataReply) ProtoMessage() {}

func (x *GetTopicsMetadataReply) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicsMetadataReply.ProtoReflect.Descriptor instead.
func (*GetTopicsMetadataReply) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{14}
}

func (x *GetTopicsMetadataReply) GetTopics() []*TopicMetadata {
	if x != nil {
		return x.Topics
	}
	return nil
}

// 获取讨论主题的详细信息，进入讨论时加载
type GetTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetTopicRequest) Reset() {
	*x = GetTopicRequest{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicRequest) ProtoMessage() {}

func (x *GetTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicRequest.ProtoReflect.Descriptor instead.
func (*GetTopicRequest) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{15}
}

func (x *GetTopicRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetTopicReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *Topic `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *GetTopicReply) Reset() {
	*x = GetTopicReply{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopicReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicReply) ProtoMessage() {}

func (x *GetTopicReply) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicReply.ProtoReflect.Descriptor instead.
func (*GetTopicReply) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{16}
}

func (x *GetTopicReply) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

type UploadDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename    string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	ChunkData   []byte `protobuf:"bytes,3,opt,name=chunk_data,json=chunkData,proto3" json:"chunk_data,omitempty"`
	Phone       string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *UploadDocumentRequest) Reset() {
	*x = UploadDocumentRequest{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentRequest) ProtoMessage() {}

func (x *UploadDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentRequest.ProtoReflect.Descriptor instead.
func (*UploadDocumentRequest) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{17}
}

func (x *UploadDocumentRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadDocumentRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *UploadDocumentRequest) GetChunkData() []byte {
	if x != nil {
		return x.ChunkData
	}
	return nil
}

func (x *UploadDocumentRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type UploadDocumentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UploadDocumentReply) Reset() {
	*x = UploadDocumentReply{}
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDocumentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentReply) ProtoMessage() {}

func (x *UploadDocumentReply) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_seminar_v1_seminar_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentReply.ProtoReflect.Descriptor instead.
func (*UploadDocumentReply) Descriptor() ([]byte, []int) {
	return file_gateway_seminar_v1_seminar_proto_rawDescGZIP(), []int{18}
}

func (x *UploadDocumentReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_gateway_seminar_v1_seminar_proto protoreflect.FileDescriptor

var file_gateway_seminar_v1_seminar_proto_rawDesc = []byte{
	0x0a, 0x20, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x73, 0x65, 0x6d, 0x69, 0x6e, 0x61,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x09,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4f,
	0x0a, 0x06, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x8c, 0x02, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x2c, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65,
	0x65, 0x63, 0x68, 0x52, 0x08, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x65, 0x73, 0x12, 0x30, 0x0a,
	0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x57,
	0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x22, 0x24, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x2c,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x11,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x6e, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x55, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x22, 0x49, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f,
	0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x22,
	0x23, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x8b, 0x01, 0x0a,
	0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x97, 0x06, 0x0a, 0x07,
	0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x12, 0x6b, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1c, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x73, 0x65,
	0x6d, 0x69, 0x6e, 0x61, 0x72, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x7d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x2e, 0x41, 0x79, 0x61, 0x6e,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x73, 0x65, 0x6d,
	0x69, 0x6e, 0x61, 0x72, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x61, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x19, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x41, 0x79, 0x61,
	0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16,
	0x2f, 0x73, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2f, 0x67,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x6b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1c, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x73, 0x65, 0x6d,
	0x69, 0x6e, 0x61, 0x72, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x1b, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x09, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1a, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x73, 0x65, 0x6d, 0x69,
	0x6e, 0x61, 0x72, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x1b, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x54, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1f, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x28, 0x01, 0x42, 0x21, 0x5a, 0x1f, 0x41, 0x79, 0x61, 0x6e, 0x61, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x73, 0x65, 0x6d, 0x69, 0x6e,
	0x61, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gateway_seminar_v1_seminar_proto_rawDescOnce sync.Once
	file_gateway_seminar_v1_seminar_proto_rawDescData = file_gateway_seminar_v1_seminar_proto_rawDesc
)

func file_gateway_seminar_v1_seminar_proto_rawDescGZIP() []byte {
	file_gateway_seminar_v1_seminar_proto_rawDescOnce.Do(func() {
		file_gateway_seminar_v1_seminar_proto_rawDescData = protoimpl.X.CompressGZIP(file_gateway_seminar_v1_seminar_proto_rawDescData)
	})
	return file_gateway_seminar_v1_seminar_proto_rawDescData
}

var file_gateway_seminar_v1_seminar_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_gateway_seminar_v1_seminar_proto_goTypes = []any{
	(*TopicMetadata)(nil),            // 0: Ayana.v1.TopicMetadata
	(*Speech)(nil),                   // 1: Ayana.v1.Speech
	(*Topic)(nil),                    // 2: Ayana.v1.Topic
	(*Document)(nil),                 // 3: Ayana.v1.Document
	(*CreateTopicRequest)(nil),       // 4: Ayana.v1.CreateTopicRequest
	(*CreateTopicReply)(nil),         // 5: Ayana.v1.CreateTopicReply
	(*DeleteTopicRequest)(nil),       // 6: Ayana.v1.DeleteTopicRequest
	(*DeleteTopicReply)(nil),         // 7: Ayana.v1.DeleteTopicReply
	(*StartTopicRequest)(nil),        // 8: Ayana.v1.StartTopicRequest
	(*StartTopicReply)(nil),          // 9: Ayana.v1.StartTopicReply
	(*StopTopicRequest)(nil),         // 10: Ayana.v1.StopTopicRequest
	(*StopTopicReply)(nil),           // 11: Ayana.v1.StopTopicReply
	(*StreamOutputReply)(nil),        // 12: Ayana.v1.StreamOutputReply
	(*GetTopicsMetadataRequest)(nil), // 13: Ayana.v1.GetTopicsMetadataRequest
	(*GetTopicsMetadataReply)(nil),   // 14: Ayana.v1.GetTopicsMetadataReply
	(*GetTopicRequest)(nil),          // 15: Ayana.v1.GetTopicRequest
	(*GetTopicReply)(nil),            // 16: Ayana.v1.GetTopicReply
	(*UploadDocumentRequest)(nil),    // 17: Ayana.v1.UploadDocumentRequest
	(*UploadDocumentReply)(nil),      // 18: Ayana.v1.UploadDocumentReply
}
var file_gateway_seminar_v1_seminar_proto_depIdxs = []int32{
	3,  // 0: Ayana.v1.TopicMetadata.documents:type_name -> Ayana.v1.Document
	1,  // 1: Ayana.v1.Topic.speeches:type_name -> Ayana.v1.Speech
	3,  // 2: Ayana.v1.Topic.documents:type_name -> Ayana.v1.Document
	0,  // 3: Ayana.v1.GetTopicsMetadataReply.topics:type_name -> Ayana.v1.TopicMetadata
	2,  // 4: Ayana.v1.GetTopicReply.topic:type_name -> Ayana.v1.Topic
	4,  // 5: Ayana.v1.Seminar.CreateTopic:input_type -> Ayana.v1.CreateTopicRequest
	13, // 6: Ayana.v1.Seminar.GetTopicsMetadata:input_type -> Ayana.v1.GetTopicsMetadataRequest
	15, // 7: Ayana.v1.Seminar.GetTopic:input_type -> Ayana.v1.GetTopicRequest
	6,  // 8: Ayana.v1.Seminar.DeleteTopic:input_type -> Ayana.v1.DeleteTopicRequest
	8,  // 9: Ayana.v1.Seminar.StartTopic:input_type -> Ayana.v1.StartTopicRequest
	10, // 10: Ayana.v1.Seminar.StopTopic:input_type -> Ayana.v1.StopTopicRequest
	8,  // 11: Ayana.v1.Seminar.ResumeTopic:input_type -> Ayana.v1.StartTopicRequest
	17, // 12: Ayana.v1.Seminar.UploadDocument:input_type -> Ayana.v1.UploadDocumentRequest
	5,  // 13: Ayana.v1.Seminar.CreateTopic:output_type -> Ayana.v1.CreateTopicReply
	14, // 14: Ayana.v1.Seminar.GetTopicsMetadata:output_type -> Ayana.v1.GetTopicsMetadataReply
	16, // 15: Ayana.v1.Seminar.GetTopic:output_type -> Ayana.v1.GetTopicReply
	7,  // 16: Ayana.v1.Seminar.DeleteTopic:output_type -> Ayana.v1.DeleteTopicReply
	9,  // 17: Ayana.v1.Seminar.StartTopic:output_type -> Ayana.v1.StartTopicReply
	11, // 18: Ayana.v1.Seminar.StopTopic:output_type -> Ayana.v1.StopTopicReply
	12, // 19: Ayana.v1.Seminar.ResumeTopic:output_type -> Ayana.v1.StreamOutputReply
	18, // 20: Ayana.v1.Seminar.UploadDocument:output_type -> Ayana.v1.UploadDocumentReply
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_gateway_seminar_v1_seminar_proto_init() }
func file_gateway_seminar_v1_seminar_proto_init() {
	if File_gateway_seminar_v1_seminar_proto != nil {
		return
	}
	file_gateway_seminar_v1_seminar_proto_msgTypes[12].OneofWrappers = []any{
		(*StreamOutputReply_Reasoning)(nil),
		(*StreamOutputReply_Text)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gateway_seminar_v1_seminar_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gateway_seminar_v1_seminar_proto_goTypes,
		DependencyIndexes: file_gateway_seminar_v1_seminar_proto_depIdxs,
		MessageInfos:      file_gateway_seminar_v1_seminar_proto_msgTypes,
	}.Build()
	File_gateway_seminar_v1_seminar_proto = out.File
	file_gateway_seminar_v1_seminar_proto_rawDesc = nil
	file_gateway_seminar_v1_seminar_proto_goTypes = nil
	file_gateway_seminar_v1_seminar_proto_depIdxs = nil
}
