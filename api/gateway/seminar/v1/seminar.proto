syntax = "proto3";

package Wittgenstein.v1;

import "google/api/annotations.proto";

option go_package = "Wittgenstein/api/gateway/seminar/v1;v1";


service Seminar {
  rpc CreateTopic (CreateTopicRequest) returns (CreateTopicReply) {
    option (google.api.http) = {
      post: "/seminar/topic/creating"
      body: "*"
    };
  }
  // 获取用户所有讨论主题的元信息，用于前端展示
  rpc GetTopicsMetadata (GetTopicsMetadataRequest) returns (GetTopicsMetadataReply) {
    option (google.api.http) = {
      post: "/seminar/topic/metadata"
      body: "*"
    };
  }
  // 获取讨论主题的详细信息，进入讨论时加载
  rpc GetTopic (GetTopicRequest) returns (GetTopicReply) {
    option (google.api.http) = {
      post: "/seminar/topic/getting"
      body: "*"
    };
  };
  rpc DeleteTopic (DeleteTopicRequest) returns (DeleteTopicReply) {
    option (google.api.http) = {
      post: "/seminar/topic/deleting"
      body: "*"
    };
  }
  rpc StartTopic (StartTopicRequest) returns (stream StreamOutputReply) {
  }
  rpc StopTopic (StopTopicRequest) returns (StopTopicReply) {
    option (google.api.http) = {
      post: "/seminar/topic/stopping"
      body: "*"
    };
  }
  rpc ResumeTopic (StartTopicRequest) returns (stream StreamOutputReply) {
  }
}

message TopicMetadata {
  string uid = 1;
  string content = 2;
  repeated string participants = 3;
}

message Speech {
  string uid = 1;
  string role_uid = 2;
  string content = 3;
}


message Topic {
  string uid = 1;
  repeated string participants = 2;
  repeated Speech speeches = 3;
  string title = 4;
  string title_image = 5;
  string content = 6;
  string moderator = 7;
} 

message CreateTopicRequest {
  string phone = 1;
  string content = 2;
  string moderator = 3;
  repeated string participants = 4;
}

message CreateTopicReply {
  string uid = 1;
}

message DeleteTopicRequest {
  string uid = 1;
}

message DeleteTopicReply {
  string message = 1;
}

message StartTopicRequest {
  string topicId = 1;
}

message StopTopicRequest {
  string topicId = 1;
}

message StopTopicReply {
  string message = 1;
}

message StreamOutputReply {
  oneof content {
    string reasoning = 1;
    string text = 2;
  }
  string roleUID = 3;
}


message GetTopicsMetadataRequest {
  string phone = 1;
}

message GetTopicsMetadataReply {
  repeated TopicMetadata topics = 1;
}

// 获取讨论主题的详细信息，进入讨论时加载
message GetTopicRequest {
  string uid = 1;
}

message GetTopicReply {
  Topic topic = 1;
}

